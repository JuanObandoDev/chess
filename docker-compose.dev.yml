version: '3.9'
services:
  postgresdb:
    image: postgres:latest
    container_name: postgres_chess_container
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - chess-server

  frontend:
    container_name: frontend_chess_container
    environment: 
      - NEXT_PUBLIC_API_ADDRESS=http://app:8080
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/frontend
    ports:
      - ${FRONTEND_PORT}:3000
    restart: on-failure
    networks:
      - chess-server

  app:
    container_name: golang_chess_container
    environment:
      - LISTEN_ADDR=:8080
      - LOG_LEVEL=${LOG_LEVEL}
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgresdb:5432/${DATABASE_NAME}
      - PRODUCTION=true
      - PUBLIC_WEB_ADDRESS=http://frontend:3000
      - HASH_KEY=${HASH_KEY}
      - BLOCK_KEY=${BLOCK_KEY}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
    tty: true
    build: 
      context: ./
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/chess
    ports:
      - ${PORT}:8080
    restart: on-failure
    depends_on:
      - postgresdb
      - frontend
    networks:
      - chess-server

networks:
  chess-server:
    driver: bridge