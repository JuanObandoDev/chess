version: '3.9'
services:
  traefik-dev:
    image: traefik:v2.9
    container_name: traefik_chess_dev_container
    command:
      - --api.insecure=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=chess-dev-traefik-net
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - chess-dev-traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dev.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-dev.service=api@internal"

  postgresdb-dev:
    image: postgres:latest
    container_name: postgres_chess_dev_container
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - chess-dev-postgres-net

  frontend-dev:
    container_name: frontend_chess_dev_container
    environment: 
      - NEXT_PUBLIC_API_ADDRESS=http://api.localhost
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules/
    restart: on-failure
    networks:
      chess-dev-traefik-net:
        aliases:
          - localhost
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend-dev.rule=Host(`localhost`)

  api-dev:
    container_name: api_chess_dev_container
    environment:
      - LISTEN_ADDR=:80
      - LOG_LEVEL=${LOG_LEVEL}
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgresdb-dev:5432/${DATABASE_NAME}
      - PRODUCTION=true
      - PUBLIC_WEB_ADDRESS=http://localhost
      - HASH_KEY=${HASH_KEY}
      - BLOCK_KEY=${BLOCK_KEY}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
    tty: true
    build: 
      context: ./
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./:/chess
      - /chess/frontend/
    restart: on-failure
    depends_on:
      - postgresdb-dev
    networks:
      chess-dev-postgres-net:
      chess-dev-traefik-net:
        aliases:
          - api.localhost
    labels:
      - traefik.enable=true
      - traefik.http.routers.api-dev.rule=Host(`api.localhost`)

networks:
  chess-dev-postgres-net:
    driver: bridge
  chess-dev-traefik-net:
    external: true